{
  "Serilog": {
    "Using": [],
    "LevelSwitches": { "$controlSwitch": "Information" },
    "MinimumLevel": { "ControlledBy": "$controlSwitch" },
    "Enrich": [
      "FromLogContext",
      "WithMachineName",
      "WithProcessId",
      "WithThreadId"
    ],
    "WriteTo": [
      {
        "Name": "Console"
      },
      {
        "Name": "Seq",
        "Args": {
          "serverUrl": "http://localhost:5341",
          "apiKey": "BF1gy0Q1eTLoWWQ0ttET"
        }
      }
    ]
  },
  "ConnectionStrings": {
    "Redis": "localhost:6379"
  },
  "ServiceInfo": {
    "Id": "8128D233-0583-4C00-A538-BED4A21D7C78",
    "Name": "UniversityService"
  },
  "AllowedHosts": "*",
  "RabbitMQ": {
    //AdminService
    "CreateServiceEndpointsEndpoint": "AdminService_CreateServiceEndpoints",

    //TextTemplateService
    "CreateKeywordsEndpoint": "TextTemplateService_CreateKeywords",
    "GetTextTemplateEndpoint": "TextTemplateService_GetTextTemplate",

    //EmailService
    "SendEmailEndpoint": "EmailService_SendEmail",

    //UserService
    "CheckUserIsAdminEndpoint": "UserService_GetUserAdminStatus",
    "GetUserCredentialsEndpoint": "UserService_GetUserCredentials",
    "GetUsersDataEndpoint": "UserService_GetUsersData",
    "SearchUsersEndpoint": "UserService_SearchUsers",
    "CreateAdminEndpoint": "UserService_CreateAdmin",
    "FindParseEntitiesEndpoint": "UserService_FindParseEntities",
    "CheckUsersExistenceEndpoint": "UserService_CheckUsersExistence",
    "FilterUsersDataEndpoint": "UserService_FilterUsersData",

    //DepartmentService
    "GetDepartmentsEndpoint": "DepartmentService_GetDepartments",
    "CheckCommunityManagerEndpoint": "DepartmentService_GetDepartments2",

    //PositionService
    "GetPositionsEndpoint": "PositionService_GetPositions",
    "CheckEventManagerEndpoint": "PositionService_GetPositions2",

    //RigthService
    "CheckUserRightsEndpoint": "CRService_CheckUserRights",
    "GetUserRolesEndpoint": "RigthService_GetUserRoles",
    "CheckUserAnyRightEndpoint": "ARService_CheckUserAnyRight",

    //AuthService
    "ValidateTokenEndpoint": "AuthService_ValidateToken",
    "GetTokenEndpoint": "AuthService_GetToken",

    //CompanyService
    "GetCompaniesEndpoint": "CompanyService_GetCompanies",

    //OfficeService
    "GetOfficesEndpoint": "OfficeService_GetOffices",

    //ImageService
    "GetImagesEndpoint": "ImageService_GetImages",
    "CreateImagesEndpoint": "ImageService_CreateImages",

    "CheckProjectManagerEndpoint": "TODO1",
    "CheckDepartmentManagerEndpoint": "TODO2"
  },
  "CheckTokenMiddleware": {
    "SkippedEndpoints": [
      "/swagger",
      "/swagger/index.html",
      "/_vs/browserLink",
      "/_framework/aspnetcore-browser-refresh.js",
      "/swagger/2.0.1.0/swagger.json"
    ]
  }
}
